{"ast":null,"code":"var _jsxFileName = \"/Users/elliottyoon/Desktop/webdev-labs/lab10/src/AddComment.js\";\nimport React from 'react';\nimport { getHeaders } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddComment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInput = /*#__PURE__*/React.createRef();\n    this.submitComment = this.submitComment.bind(this);\n    this.addComment = this.addComment.bind(this);\n  }\n\n  componentDidMount() {\n    // fetch posts and then set the state\n    this.textInput.current.focus();\n  }\n\n  submitComment(event) {\n    event.preventDefault();\n    this.textInput.current.focus();\n    const text = document.getElementById(this.props.postId + \"-label\").value;\n\n    if (text != '') {\n      this.addComment(text);\n      this.props.refreshPostDataFromServer();\n    }\n  }\n\n  addComment(text) {\n    const postData = {\n      \"post_id\": this.props.postId,\n      \"text\": text\n    };\n    fetch('/api/comments', {\n      method: \"POST\",\n      headers: getHeaders(),\n      body: JSON.stringify(postData)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.props.postId + \"-label\",\n        style: {\n          display: 'none'\n        },\n        children: \"Add a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        id: this.props.postId + \"-label\",\n        ref: this.textInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"link\",\n        onClick: this.submitComment,\n        \"data-post-id\": this.props.postId,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default AddComment;","map":{"version":3,"sources":["/Users/elliottyoon/Desktop/webdev-labs/lab10/src/AddComment.js"],"names":["React","getHeaders","AddComment","Component","constructor","props","textInput","createRef","submitComment","bind","addComment","componentDidMount","current","focus","event","preventDefault","text","document","getElementById","postId","value","refreshPostDataFromServer","postData","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","render","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,SAAzB;;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,SAAL,gBAAiBN,KAAK,CAACO,SAAN,EAAjB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKL,SAAL,CAAeM,OAAf,CAAuBC,KAAvB;AACH;;AAEDL,EAAAA,aAAa,CAAEM,KAAF,EAAU;AACnBA,IAAAA,KAAK,CAACC,cAAN;AACA,SAAKT,SAAL,CAAeM,OAAf,CAAuBC,KAAvB;AACA,UAAMG,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAKb,KAAL,CAAWc,MAAX,GAAoB,QAA5C,EAAsDC,KAAnE;;AACA,QAAIJ,IAAI,IAAI,EAAZ,EAAgB;AACZ,WAAKN,UAAL,CAAgBM,IAAhB;AACA,WAAKX,KAAL,CAAWgB,yBAAX;AACH;AACJ;;AAEDX,EAAAA,UAAU,CAACM,IAAD,EAAO;AACb,UAAMM,QAAQ,GAAG;AACb,iBAAW,KAAKjB,KAAL,CAAWc,MADT;AAEb,cAAQH;AAFK,KAAjB;AAKAO,IAAAA,KAAK,CAAC,eAAD,EAAkB;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAExB,UAAU,EAFA;AAGnByB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf;AAHa,KAAlB,CAAL,CAKCO,IALD,CAKMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALlB,EAMCF,IAND,CAMMG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KARD;AASH;;AAGDG,EAAAA,MAAM,GAAG;AACL,wBACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAE,KAAK9B,KAAL,CAAWc,MAAX,GAAoB,QAApC;AACO,QAAA,KAAK,EAAE;AAACiB,UAAAA,OAAO,EAAE;AAAV,SADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,kBAA/B;AACO,QAAA,EAAE,EAAE,KAAK/B,KAAL,CAAWc,MAAX,GAAoB,QAD/B;AACyC,QAAA,GAAG,EAAE,KAAKb;AADnD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAQ,QAAA,SAAS,EAAC,MAAlB;AACQ,QAAA,OAAO,EAAE,KAAKE,aADtB;AAEQ,wBAAc,KAAKH,KAAL,CAAWc,MAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAUF;;AArDmC;;AAwDzC,eAAejB,UAAf","sourcesContent":["import React from 'react'\nimport {getHeaders} from './utils'\n\nclass AddComment extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.textInput = React.createRef();\n        this.submitComment = this.submitComment.bind(this)\n        this.addComment = this.addComment.bind(this);\n    }\n\n    componentDidMount() {\n        // fetch posts and then set the state\n        this.textInput.current.focus();\n    }\n\n    submitComment( event ) {\n        event.preventDefault()\n        this.textInput.current.focus();\n        const text = document.getElementById(this.props.postId + \"-label\").value;\n        if (text != '') {\n            this.addComment(text);\n            this.props.refreshPostDataFromServer();\n        }\n    }\n\n    addComment(text) {\n        const postData = {\n            \"post_id\": this.props.postId,\n            \"text\": text\n        }\n\n        fetch('/api/comments', {\n            method: \"POST\",\n            headers: getHeaders(),\n            body: JSON.stringify(postData)\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n        })\n    }\n\n\n    render() {\n        return (\n        <div className=\"add-comment\">\n            <label htmlFor={this.props.postId + \"-label\"}\n                   style={{display: 'none'}}>Add a comment</label>\n            <input type=\"text\" placeholder=\"Add a comment...\" \n                   id={this.props.postId + \"-label\"} ref={this.textInput}></input>\n            <button className=\"link\"\n                    onClick={this.submitComment}\n                    data-post-id={this.props.postId}>Post</button>\n        </div>\n    )}\n}\n\nexport default AddComment;"]},"metadata":{},"sourceType":"module"}