{"ast":null,"code":"var _jsxFileName = \"/Users/elliottyoon/Desktop/webdev-labs/lab10/src/Post.js\";\nimport React from 'react';\nimport LikeButton from './LikeButton';\nimport BookmarkButton from './BookmarkButton';\nimport { getHeaders } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props); // initialization code goes here\n\n    this.state = {\n      post: props.model\n    };\n    this.refreshPostDataFromServer = this.refreshPostDataFromServer.bind(this);\n    this.displayComments = this.displayComments.bind(this);\n  }\n\n  componentDidMount() {// fetch posts and then set the state\n  }\n\n  displayComments() {\n    const post = this.state.post;\n    const comments = post.comments;\n    console.log(comments);\n\n    if (comments.length > 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-post-id\": post.id,\n          className: \"link\",\n          children: [\"View all \", comments.length, \" comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: comments[comments.length - 1].user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 24\n          }, this), \" \", comments[comments.length - 1].text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    } else if (comments.length == 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: comments[comments.length - 1].user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 24\n          }, this), \" \", comments[comments.length - 1].text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  refreshPostDataFromServer() {\n    // refetch the post:\n    const url = '/api/posts/' + this.state.post.id;\n    fetch(url, {\n      headers: getHeaders()\n    }).then(response => response.json()).then(data => {\n      //console.log(data);\n      this.setState({\n        post: data\n      });\n    });\n  }\n\n  render() {\n    const post = this.state.post;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-dots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image_url,\n        alt: 'Image posted by ' + post.user.username,\n        width: \"300\",\n        height: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(LikeButton, {\n            likeId: post.current_user_like_id,\n            postId: post.id,\n            refreshPost: this.refreshPostDataFromServer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bt-comment\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bt-message\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-paper-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(BookmarkButton, {\n            bookmarkId: post.current_user_bookmark_id,\n            postId: post.id,\n            refreshPost: this.refreshPostDataFromServer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), this.displayComments(), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"timestamp\",\n          children: post.display_time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, 'post_' + post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/elliottyoon/Desktop/webdev-labs/lab10/src/Post.js"],"names":["React","LikeButton","BookmarkButton","getHeaders","Post","Component","constructor","props","state","post","model","refreshPostDataFromServer","bind","displayComments","componentDidMount","comments","console","log","length","id","user","username","text","url","fetch","headers","then","response","json","data","setState","render","image_url","current_user_like_id","current_user_bookmark_id","caption","display_time"],"mappings":"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","sourcesContent":["import React from 'react'\nimport LikeButton from './LikeButton'\nimport BookmarkButton from './BookmarkButton';\nimport {getHeaders} from './utils'\n\nclass Post extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        // initialization code goes here\n        this.state = {\n            post: props.model\n        }\n        \n        this.refreshPostDataFromServer = this.refreshPostDataFromServer.bind(this);\n        this.displayComments = this.displayComments.bind(this)\n    }\n\n    componentDidMount() {\n        // fetch posts and then set the state\n    }\n\n    displayComments() {\n        const post = this.state.post\n        const comments = post.comments \n        console.log(comments)\n        if (comments.length > 1) {\n            return (\n                <div className=\"comments\">\n                    <button data-post-id={post.id}\n                            className=\"link\">\n                        View all {comments.length} comments\n                    </button>\n                    <p><b>{comments[comments.length - 1].user.username}</b> {comments[comments.length - 1].text}</p>\n                </div>\n                \n            )\n        }\n        else if (comments.length == 1) {\n            return (\n                <div className=\"comments\">\n                    <p><b>{comments[comments.length - 1].user.username}</b> {comments[comments.length - 1].text}</p>\n                </div>\n                \n            )\n        }\n    }\n\n    refreshPostDataFromServer () {\n        // refetch the post:\n        const url = '/api/posts/' + this.state.post.id;\n        fetch(url, {\n            headers: getHeaders()\n        }).then(response => response.json())\n        .then(data => {\n            //console.log(data);\n            this.setState({\n                post: data\n            })\n        })\n    }\n\n    render() {\n        const post = this.state.post;\n        return (\n            <section \n                className=\"card\"\n                key={'post_' + post.id}>\n                <div className=\"header\">\n                    <h3>{ post.user.username }</h3>\n                    <i className=\"fa fa-dots\"></i>\n                </div>\n                <img src={post.image_url} \n                     alt={'Image posted by ' + post.user.username }\n                     width=\"300\"\n                     height=\"300\"/>\n\n                <div className=\"info\">\n                    <div>\n                        <LikeButton \n                            likeId={post.current_user_like_id}\n                            postId={post.id}\n                            refreshPost={this.refreshPostDataFromServer}/>\n                        <button className=\"bt-comment\">\n                            <i className=\"far fa-comment\"></i>\n                        </button>\n                        <button className=\"bt-message\">\n                            <i className=\"far fa-paper-plane\"></i>\n                        </button>\n                        <BookmarkButton \n                            bookmarkId={post.current_user_bookmark_id}\n                            postId={post.id}\n                            refreshPost={this.refreshPostDataFromServer}/>\n                    </div>\n                    <p>{post.caption}</p>\n                    { this.displayComments() }\n                    <p className=\"timestamp\">{post.display_time}</p>\n                </div>\n                \n            </section>\n        )\n    }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}